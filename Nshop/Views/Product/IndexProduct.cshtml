@model IEnumerable<Nshop.Models.Products>

<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <link rel="stylesheet" type="text/css" href="~/css/Productcss.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.7.0/font/bootstrap-icons.css">

</head>

<body>
    @{

    }
    <div class="show-product">
        <div class="Tab-option-product">
            <div class="fillter-product">
                <input id="myInput" onkeyup="SearchDynamically()" type="text" class="search-product form-control" placeholder="Search Product ...." />
                <a class="search-button btn btn-light"><i class="bi bi-search"></i></a>
                <label>Sắp xếp theo: </label>
                <select onchange="optionSort()" class="form-control" id="order-option">
                    <option>Product name</option>
                    <option>Price</option>
                    <option> Quantity</option>
                </select>
                <a class="btn btn-outline-secondary order-button" onclick="buttonOrderBy(this)"><i class="bi bi-caret-up"></i></a>
            </div>
            <div class="modify-product">
                <a asp-action="CreateForm" asp-route-id="@ViewBag.CatalogIDSelecting" class="btn btn-info add-button"><i class="bi bi-plus-circle-dotted"></i>Thêm</a>
            </div>
            <div class="btn btn-outline-secondary"id="tab-tempory"><i class="bi bi-check-all"></i>Đã sắp xếp giảm</div>
        </div>
        <ul id="myUL" class="flex-container wrap">
            @{
                Dictionary<string, string> dictionary = new Dictionary<string, string>();


            }
            @foreach (var item in Model)
            {
                try
                {
                    dictionary = item.Detail.TrimEnd(';').Split(';').ToDictionary(item => item.Split('=')[0], item => item.Split('=')[1]);
                }
                catch
                {
                    dictionary = null;
                }
                <li class="flex-item">
                    <button class="button-75">-@(item.Discount)%</button>
                    @if (item.Discount >= 35)
                    {
                        <button class="button-49">Sale</button>
                    }
                    <div class="flex-component">
                        <div class="item-image"><img src="@item.ImageLink"></div>
                        <div class="item-descriptions">
                            <div class="item-title">@item.ProductName</div>
                            @if (dictionary != null)
                            {
                                <div class="item-info"><b>@dictionary.ElementAt(0).Key</b>:@dictionary.ElementAt(0).Value</div>
                                <hr class="line">
                                <div class="item-info"><b>@dictionary.ElementAt(1).Key</b>:@dictionary.ElementAt(1).Value</div>
                            }
                            <hr class="line" style="margin-top:45px;">
                        </div>

                    </div>
                    <div class="item-price">@(item.Price-item.Price*((decimal)item.Discount/100)) VND </div>
                    <div class="item-quanlity" hidden>@item.Quantity</div>
                    <hr class="line">
                    <a asp-controller="Product" asp-action="DetailProduct" asp-route-id="@item.ProductId" class="button-17 item-detail">Details</a>
                </li>
            }

        </ul>
        <div class="pagination">
            <div class="button-pagination">
                <a href="#">&laquo;</a>
                <a href="#">1</a>
                <a class="active" href="#">2</a>
                <a href="#">3</a>
                <a href="#">4</a>
                <a href="#">5</a>
                <a href="#">6</a>
                <a href="#">&raquo;</a>
            </div>
        </div>
    </div>
    <script>


        var optionSorted = "item-title";
        function optionSort() {
            @*<option>Product name</option>
                    <option>Price</option>
                    <option> Quantity</option>*@
            var x = document.getElementById("order-option");
            var i = x.selectedIndex;
            var temp = x.options[i].text;
            if (temp == "Product name") {
                optionSorted = "item-title";
            }
            else if (temp == "Price") {
                optionSorted = "item-price";
            }
            else if (temp == "Quantity") {
                optionSorted = "item-quanlity";
            }
        }
        var tabTempory = document.getElementById("tab-tempory");

            function buttonOrderBy(x) {
                tabTempory.style.animation = "tab-tempory 0.6s";
            if (x.innerHTML == '<i class="bi bi-caret-up"></i>') {
                x.innerHTML = '<i class="bi bi-caret-down"></i>';
                tabTempory.innerHTML = '<i class="bi bi-check-all"></i>Đã sắp xếp tăng';
                tabTempory.style.animation = "tab-tempory 0.6s";
               
            }
            else {
                x.innerHTML = '<i class="bi bi-caret-up"></i>';
                tabTempory.innerHTML = '<i class="bi bi-check-all"></i>Đã sắp xếp giảm';
                tabTempory.style.animation = "tab-tempory2 0.6s";
               
            }
        //sort decs and asc
            let list, i, switching, b, shouldSwitch, dir, switchcount = 0;
            list = document.getElementById("myUL");
            switching = true;
            // Set the sorting direction to ascending:
            dir = "asc";
            // Make a loop that will continue until no switching has been done:
            while (switching) {
                // start by saying: no switching is done:
                switching = false;
                b = list.getElementsByTagName("li");
                // Loop through all list-items:
                for (i = 0; i < (b.length - 1); i++) {
                    //start by saying there should be no switching:
                    shouldSwitch = false;
                    /* check if the next item should switch place with the current item,
                    based on the sorting direction (asc or desc): */
                    if (dir == "asc") {
                        if (b[i].getElementsByClassName(optionSorted)[0].innerHTML.toLowerCase() > b[i + 1].getElementsByClassName(optionSorted)[0].innerHTML.toLowerCase()) {
                            /* if next item is alphabetically lower than current item,
                            mark as a switch and break the loop: */
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (b[i].getElementsByClassName(optionSorted)[0].innerHTML.toLowerCase() < b[i + 1].getElementsByClassName(optionSorted)[0].innerHTML.toLowerCase()) {
                            /* if next item is alphabetically higher than current item,
                            mark as a switch and break the loop: */
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    /* If a switch has been marked, make the switch
                    and mark that a switch has been done: */
                    b[i].parentNode.insertBefore(b[i + 1], b[i]);
                    switching = true;
                    // Each time a switch is done, increase switchcount by 1:
                    switchcount++;
                } else {
                    /* If no switching has been done AND the direction is "asc",
                    set the direction to "desc" and run the while loop again. */
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }
        function SearchDynamically() {
            var input, filter, ul, li, a, i, txtValue;
            input = document.getElementById("myInput");
            filter = input.value.toUpperCase();
            ul = document.getElementById("myUL");
            li = ul.getElementsByTagName("li");
            for (i = 0; i < li.length; i++) {
                a = li[i].getElementsByClassName("item-title")[0];
                txtValue = a.textContent || a.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    li[i].style.display = "";
                } else {
                    li[i].style.display = "none";
                }
            }
        }
    </script>

</body>
</html>
